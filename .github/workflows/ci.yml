name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type checking
      run: npm run build --if-present || npx tsc --noEmit
    
    - name: Run linting (if available)
      run: npm run lint --if-present || echo "No linting configured"
      continue-on-error: true
    
    - name: Run unit tests
      run: npm run test:unit --if-present || npm run test -- --testPathPattern=unit
      env:
        NODE_OPTIONS: "--experimental-vm-modules"
    
    - name: Run integration tests  
      run: npm run test:integration --if-present || npm run test -- --testPathPattern=integration
      env:
        NODE_OPTIONS: "--experimental-vm-modules"
      continue-on-error: true # Allow integration tests to fail for now during stabilization
    
    - name: Run all tests
      run: npm run test
      env:
        NODE_OPTIONS: "--experimental-vm-modules"
      continue-on-error: true # Allow some test failures during development
    
    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build:
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build --if-present || npx tsc
    
    - name: Test CLI installation (Unix)
      if: matrix.os == 'ubuntu-latest'
      run: |
        npm pack
        npm install -g cloudsaver-*.tgz
        cloudsaver --help
    
    - name: Test CLI installation (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        npm pack
        npm install -g (Get-ChildItem cloudsaver-*.tgz | Select-Object -First 1).Name
        cloudsaver --help
      shell: pwsh
